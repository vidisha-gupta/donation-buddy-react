{"ast":null,"code":"var _jsxFileName = \"/Users/vidishagupta/react/donation-buddy/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getBuildings = async () => {\n      try {\n        let response = await fetch(`http://localhost:4567/buildings`);\n\n        if (!response.ok) {\n          alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n          return; // Don't keep trying to execute if the response is bad.\n        }\n\n        let text = await response.json();\n        this.setState({\n          buildings: Object.keys(text).sort()\n        });\n      } catch (e) {\n        alert(\"There was an error contacting the server.\");\n        console.log(e);\n      }\n    };\n\n    this.sendRequest = async () => {\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode;\n\n      try {\n        let response = await fetch(url);\n\n        if (!response.ok) {\n          alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n          return; // Don't keep trying to execute if the response is bad.\n        }\n\n        let text = await response.json();\n        this.setState({\n          center: jsonResponse.results[0].geometry.location\n        });\n      } catch (e) {\n        alert(\"There was an error contacting the server.\");\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: {\n        lat: 47.606209,\n        lng: -122.332069\n      },\n      zipcode: 98105\n    };\n  } // const google = window.google\n  //const config = require('/config.js');\n  // let map;\n\n  /**\n     * Gets the buildings on the UW campus\n     */\n\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"zipcode\",\n        label: \"zipcode\",\n        value: this.state.zip,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.sendRequest,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        apiKey: this.state.apiKey,\n        center: this.state.center,\n        zoom: 13\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vidishagupta/react/donation-buddy/src/App.js"],"names":["React","Component","GoogleMap","config","Button","TextField","App","constructor","props","getBuildings","response","fetch","ok","alert","status","text","json","setState","buildings","Object","keys","sort","e","console","log","sendRequest","url","state","apiKey","zipcode","center","jsonResponse","results","geometry","location","lat","lng","render","zip"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: { lat: 47.606209, lng: -122.332069 },\n      zipcode: 98105,\n\n    };\n  }\n\n  // const google = window.google\n  //const config = require('/config.js');\n\n\n  // let map;\n\n  /**\n     * Gets the buildings on the UW campus\n     */\n  getBuildings = async () => {\n    try {\n      let response = await fetch(`http://localhost:4567/buildings`);\n      if (!response.ok) {\n        alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        return; // Don't keep trying to execute if the response is bad.\n      }\n      let text = await response.json();\n      this.setState({\n        buildings: Object.keys(text).sort(),\n      });\n    } catch (e) {\n      alert(\"There was an error contacting the server.\");\n      console.log(e);\n    }\n  };\n\n\n  sendRequest = async () => {\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode\n    try {\n      let response = await fetch(url);\n      if (!response.ok) {\n        alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        return; // Don't keep trying to execute if the response is bad.\n      }\n      let text = await response.json();\n      this.setState({\n        center: jsonResponse.results[0].geometry.location,\n      });\n    } catch (e) {\n      alert(\"There was an error contacting the server.\");\n      console.log(e);\n    }\n  }\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n        {/* <header>\n        <title>Simple Map</title>\n        <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\" />\n          <script type='text/javascript' src='config.js'></script>\n          <script src=\"./index.js\"></script> \n          <script\n            src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA8xuTe2-OqaE-rtsAcoVkvIlBX9ZJWNGU&callback=initMap&libraries=&v=weekly\"\n            async></script>\n      </header> */}\n\n        <TextField\n          id=\"zipcode\"\n          label=\"zipcode\"\n          value={this.state.zip}\n          margin=\"normal\"\n        />\n        <Button onClick={this.sendRequest}>\n          GO\n        </Button>\n        {/* <form> zip: <input type=\"text\" name=\"zipcode\" id=\"zipcode\" value=\"\" /> <a href=\"#\" onClick={sendRequest()}>Go</a></form> */}\n        {/* <GoogleMap\n        onLoad={map => {\n          const bounds = new window.google.maps.LatLngBounds();\n          map.fitBounds(bounds);\n        }}\n        onUnmount={map => {\n          // do your stuff before map is unmounted\n        }}\n      /> */}\n        <GoogleMap\n          apiKey={this.state.apiKey}\n          center={this.state.center}\n          zoom={13}>\n        </GoogleMap>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}