{"ast":null,"code":"var _jsxFileName = \"/Users/vidishagupta/react/donation-buddy/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendRequest = async () => {\n      console.log(this.state.zipcode);\n\n      if (this.state.zipcode.length != 5) {\n        alert(\"Please input a valid zipcode of 5 digits!\");\n      }\n\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode;\n\n      try {\n        let response = await fetch(url);\n\n        if (!response.ok) {\n          alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n          return; // Don't keep trying to execute if the response is bad.\n        }\n\n        let text = await response.json();\n        this.setState({\n          center: text.results[0].geometry.location\n        });\n      } catch (e) {\n        alert(\"There was an error contacting the server.\");\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: {\n        lat: 47.606209,\n        lng: -122.332069\n      },\n      zipcode: 98105\n    };\n  } // const google = window.google\n  //const config = require('/config.js');\n  // let map;\n\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n  handleInputChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      zipcode: event.target.value\n    });\n    console.log(this.state.zipcode);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"zipcode\",\n        label: \"zipcode\",\n        value: this.state.zip,\n        margin: \"normal\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.sendRequest,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        bootstrapURLKeys: {\n          apiKey: this.state.API_KEY,\n          center: this.state.center,\n          zoom: 13,\n          language: 'en',\n          region: 'us',\n          libraries: ['places']\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vidishagupta/react/donation-buddy/src/App.js"],"names":["React","Component","GoogleMap","config","Button","TextField","App","constructor","props","sendRequest","console","log","state","zipcode","length","alert","url","apiKey","response","fetch","ok","status","text","json","setState","center","results","geometry","location","e","lat","lng","handleInputChange","event","target","value","render","zip","API_KEY","zoom","language","region","libraries"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: { lat: 47.606209, lng: -122.332069 },\n      zipcode: 98105,\n    };\n  }\n\n  // const google = window.google\n  //const config = require('/config.js');\n\n\n  // let map;\n\n  sendRequest = async () => {\n    console.log(this.state.zipcode);\n    if (this.state.zipcode.length != 5) {\n      alert(\"Please input a valid zipcode of 5 digits!\");\n    }\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode\n    try {\n      let response = await fetch(url);\n      if (!response.ok) {\n        alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        return; // Don't keep trying to execute if the response is bad.\n      }\n      let text = await response.json();\n      this.setState({\n        center: text.results[0].geometry.location,\n      });\n    } catch (e) {\n      alert(\"There was an error contacting the server.\");\n      console.log(e);\n    }\n  }\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n  handleInputChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      zipcode: event.target.value,\n    });\n    console.log(this.state.zipcode);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n        {/* <header>\n        <title>Simple Map</title>\n        <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n          integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"./style.css\" />\n          <script type='text/javascript' src='config.js'></script>\n          <script src=\"./index.js\"></script> \n          <script\n            src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA8xuTe2-OqaE-rtsAcoVkvIlBX9ZJWNGU&callback=initMap&libraries=&v=weekly\"\n            async></script>\n      </header> */}\n\n        <TextField\n          id=\"zipcode\"\n          label=\"zipcode\"\n          value={this.state.zip}\n          margin=\"normal\"\n          onChange={this.handleInputChange}\n        />\n        <Button onClick={this.sendRequest}>\n          GO\n        </Button>\n        {/* <form> zip: <input type=\"text\" name=\"zipcode\" id=\"zipcode\" value=\"\" /> <a href=\"#\" onClick={sendRequest()}>Go</a></form> */}\n        {/* <GoogleMap\n        onLoad={map => {\n          const bounds = new window.google.maps.LatLngBounds();\n          map.fitBounds(bounds);\n        }}\n        onUnmount={map => {\n          // do your stuff before map is unmounted\n        }}\n      /> */}\n        {/* <GoogleMap\n          apiKey={this.state.apiKey}\n          center={this.state.center}\n          zoom={13}>\n        </GoogleMap> */}\n        <GoogleMap\n          bootstrapURLKeys={{\n            apiKey: this.state.API_KEY,\n            center: this.state.center,\n            zoom: 13,\n            language: 'en',\n            region: 'us',\n            libraries: ['places'],\n          }}\n        />\n\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}