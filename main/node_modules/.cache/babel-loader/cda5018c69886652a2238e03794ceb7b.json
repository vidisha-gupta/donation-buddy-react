{"ast":null,"code":"var _jsxFileName = \"/Users/vidishagupta/react/donation-buddy/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendRequest = async () => {\n      console.log(parseInt(this.state.zipcode));\n\n      if (isNaN(this.state.zipcode) || this.state.zipcode.toString().length !== 5) {\n        alert(\"Please input a valid zipcode of 5 digits!\" + this.state.zipcode.length);\n      }\n\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode;\n\n      try {\n        let response = await fetch(url);\n\n        if (!response.ok) {\n          alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n          return; // Don't keep trying to execute if the response is bad.\n        }\n\n        let text = await response.json();\n        this.setState({\n          center: text.results[0].geometry.location\n        });\n      } catch (e) {\n        alert(\"There was an error contacting the server.\");\n        console.log(e);\n      }\n    };\n\n    this.handleInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        zipcode: event.target.value\n      });\n      console.log(this.state.zipcode);\n    };\n\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: {\n        lat: 47.606209,\n        lng: -122.332069\n      },\n      zipcode: 98105\n    };\n  } // const google = window.google\n  //const config = require('/config.js');\n  // let map;\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        t: true,\n        id: \"zipcode\",\n        label: \"zipcode\",\n        value: this.state.zip,\n        margin: \"normal\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.sendRequest,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        bootstrapURLKeys: {\n          key: this.state.API_KEY,\n          center: this.state.center,\n          zoom: 13,\n          libraries: ['places', 'geometry']\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vidishagupta/react/donation-buddy/src/App.js"],"names":["React","Component","GoogleMap","config","Button","TextField","App","constructor","props","sendRequest","console","log","parseInt","state","zipcode","isNaN","toString","length","alert","url","apiKey","response","fetch","ok","status","text","json","setState","center","results","geometry","location","e","handleInputChange","event","target","value","lat","lng","render","zip","key","API_KEY","zoom","libraries"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMap from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: { lat: 47.606209, lng: -122.332069 },\n      zipcode: 98105,\n    };\n  }\n\n  // const google = window.google\n  //const config = require('/config.js');\n\n\n  // let map;\n\n  sendRequest = async () => {\n    console.log(parseInt(this.state.zipcode));\n    if (isNaN(this.state.zipcode) || this.state.zipcode.toString().length !== 5) {\n      alert(\"Please input a valid zipcode of 5 digits!\" + this.state.zipcode.length);\n    }\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?key=\" + this.state.apiKey + \"&components=postal_code:\" + this.state.zipcode\n    try {\n      let response = await fetch(url);\n      if (!response.ok) {\n        alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        return; // Don't keep trying to execute if the response is bad.\n      }\n      let text = await response.json();\n      this.setState({\n        center: text.results[0].geometry.location,\n      });\n    } catch (e) {\n      alert(\"There was an error contacting the server.\");\n      console.log(e);\n    }\n  }\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n  handleInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      zipcode: event.target.value,\n    });\n    console.log(this.state.zipcode);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TextField\n        t\n          id=\"zipcode\"\n          label=\"zipcode\"\n          value={this.state.zip}\n          margin=\"normal\"\n          onChange={this.handleInputChange}\n        />\n        <Button onClick={this.sendRequest}>\n          GO\n        </Button>\n        <GoogleMap\n          bootstrapURLKeys={{\n            key: this.state.API_KEY,\n            center: this.state.center,\n            zoom: 13,\n            libraries: ['places', 'geometry']\n\n          }}\n        />\n\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}