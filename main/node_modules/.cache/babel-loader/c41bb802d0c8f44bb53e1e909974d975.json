{"ast":null,"code":"var _jsxFileName = \"/Users/vidishagupta/react/donation-buddy/src/App.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendRequest = async () => {\n      if (isNaN(this.state.zipcode) || this.state.zipcode.toString().length !== 5) {\n        alert(\"Please input a valid zipcode of 5 digits!\");\n        this.setState({\n          zipcode: text.results[0].geometry.location\n        });\n        return;\n      }\n\n      const url = \"https://maps.googleapis.com/maps/api/geocode/json?components=postal_code:\" + this.state.zipcode + \"&key=\" + this.state.apiKey;\n\n      try {\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n          return; // Don't keep trying to execute if the response is bad.\n        }\n\n        let text = await response.json();\n        this.setState({\n          center: text.results[0].geometry.location\n        });\n        console.log(text);\n      } catch (e) {\n        alert(\"There was an error contacting the server. Your zip code may be invalid.\");\n        console.log(e);\n      }\n    };\n\n    this.handleInputChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        zipcode: event.target.value\n      });\n      console.log(this.state.zipcode);\n    };\n\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: {\n        lat: 47.606209,\n        lng: -122.332069\n      },\n      zipcode: 98105\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        id: \"zipcode\",\n        label: \"zipcode\",\n        value: this.state.zip,\n        margin: \"normal\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.sendRequest,\n        children: \"GO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n          bootstrapURLKeys: {\n            key: this.state.apiKey\n          },\n          defaultCenter: this.state.center,\n          defaultZoom: 13\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vidishagupta/react/donation-buddy/src/App.js"],"names":["React","Component","GoogleMapReact","config","Button","TextField","App","constructor","props","sendRequest","isNaN","state","zipcode","toString","length","alert","setState","text","results","geometry","location","url","apiKey","response","fetch","ok","status","json","center","console","log","e","handleInputChange","event","target","value","lat","lng","render","zip","height","width","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport './App.css';\nimport config from './config.js';\nimport { Button, TextField } from '@material-ui/core';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiKey: config[\"API_KEY\"],\n      center: { lat: 47.606209, lng: -122.332069 },\n      zipcode: 98105,\n    };\n  }\n\n  sendRequest = async () => {\n    if (isNaN(this.state.zipcode) || this.state.zipcode.toString().length !== 5) {\n      alert(\"Please input a valid zipcode of 5 digits!\");\n      this.setState({\n        zipcode: text.results[0].geometry.location,\n      });\n      return;\n    }\n    const url = \"https://maps.googleapis.com/maps/api/geocode/json?components=postal_code:\" + this.state.zipcode + \"&key=\" + this.state.apiKey;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        return; // Don't keep trying to execute if the response is bad.\n      }\n      let text = await response.json();\n      this.setState({\n        center: text.results[0].geometry.location,\n      });\n      console.log(text);\n    } catch (e) {\n      alert(\"There was an error contacting the server. Your zip code may be invalid.\");\n      console.log(e);\n    }\n  }\n\n  // function initMap() {\n  //   map = new google.maps.Map(document.getElementById(\"map\"), {\n  //     center: { lat: 47.606209, lng: -122.332069 },\n  //     zoom: 13.25,\n  //   });\n  // }\n  handleInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({\n      zipcode: event.target.value,\n    });\n    console.log(this.state.zipcode);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TextField\n          type=\"number\"\n          id=\"zipcode\"\n          label=\"zipcode\"\n          value={this.state.zip}\n          margin=\"normal\"\n          onChange={this.handleInputChange}\n        />\n        <Button onClick={this.sendRequest}>\n          GO\n        </Button>\n        {/* <GoogleMap\n          bootstrapURLKeys={{\n            key: this.state.API_KEY,\n            center: this.state.center,\n            zoom: 13,\n            libraries: ['places', 'geometry']\n\n          }}\n        /> */}\n        <div style={{ height: '100vh', width: '100%' }}>\n          <GoogleMapReact\n            bootstrapURLKeys={{ key: this.state.apiKey }}\n            defaultCenter={this.state.center}\n            defaultZoom={13}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}